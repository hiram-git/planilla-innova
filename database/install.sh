#!/bin/bash

# Script de Instalaci√≥n de Base de Datos Limpia
# Sistema de Planillas MVC v2.1
# Compatible con: Linux, macOS, Windows (WSL/Git Bash)

# Configuraci√≥n de colores
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Funciones para mensajes
show_step() {
    echo -e "${CYAN}üîÑ $1${NC}"
}

show_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

show_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

show_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

show_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

# Header
clear
echo -e "${CYAN}"
echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë              üóÉÔ∏è  INSTALADOR BASE DE DATOS LIMPIA              ‚ïë"
echo "‚ïë                 Sistema de Planillas MVC v2.1                ‚ïë"
echo "‚ïë                      Bash Edition                            ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo -e "${NC}"

# Variables
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
ENV_FILE="$SCRIPT_DIR/../.env"
SCHEMA_FILE="$SCRIPT_DIR/schema.sql"
PHP_SCRIPT="$SCRIPT_DIR/install.php"

# 1. Verificar prerrequisitos
show_step "Verificando prerrequisitos del sistema..."

# Verificar PHP
if ! command -v php &> /dev/null; then
    show_error "PHP no est√° instalado o no est√° en PATH"
    show_info "Instale PHP 8.0+ antes de continuar"
    exit 1
fi

# Verificar MySQL cliente
if ! command -v mysql &> /dev/null; then
    show_error "Cliente MySQL no est√° instalado o no est√° en PATH"
    show_info "Instale mysql-client antes de continuar"
    exit 1
fi

show_success "Prerrequisitos verificados"

# 2. Verificar archivos necesarios
show_step "Verificando archivos del sistema..."

if [ ! -f "$ENV_FILE" ]; then
    show_error "Archivo .env no encontrado en: $ENV_FILE"
    show_info "Ejecute la instalaci√≥n del sistema primero"
    exit 1
fi

if [ ! -f "$SCHEMA_FILE" ]; then
    show_error "Archivo schema.sql no encontrado en: $SCHEMA_FILE"
    show_info "Verifique que todos los archivos del sistema est√©n presentes"
    exit 1
fi

show_success "Archivos del sistema verificados"

# 3. Cargar configuraci√≥n .env
show_step "Cargando configuraci√≥n del sistema..."

# Funci√≥n para leer .env
load_env() {
    if [ -f "$ENV_FILE" ]; then
        # Leer variables ignorando comentarios y l√≠neas vac√≠as
        while IFS='=' read -r key value
        do
            # Ignorar comentarios y l√≠neas vac√≠as
            [[ $key =~ ^#.*$ ]] && continue
            [[ -z $key ]] && continue
            
            # Remover comillas
            value=$(echo "$value" | sed 's/^"//' | sed 's/"$//')
            
            # Exportar variable
            export "$key"="$value"
        done < "$ENV_FILE"
    fi
}

load_env
show_success "Configuraci√≥n cargada exitosamente"

# 4. Configurar variables de base de datos
DB_HOST="${DB_HOST:-localhost}"
DB_DATABASE="${DB_DATABASE:-planilla}"
DB_USERNAME="${DB_USERNAME:-root}"
DB_PASSWORD="${DB_PASSWORD:-}"

show_info "Configuraci√≥n de base de datos:"
show_info "‚Ä¢ Host: $DB_HOST"
show_info "‚Ä¢ Base de datos: $DB_DATABASE"
show_info "‚Ä¢ Usuario: $DB_USERNAME"
echo ""

# 5. Confirmar instalaci√≥n
read -p "¬øDesea continuar con la instalaci√≥n de la base de datos? (y/N): " -n 1 -r
echo ""
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    show_warning "Instalaci√≥n cancelada por el usuario"
    exit 0
fi

# 6. M√©todo de instalaci√≥n
echo ""
show_info "Seleccione el m√©todo de instalaci√≥n:"
echo "1) Usar PHP (Recomendado - m√°s robusto)"
echo "2) Usar MySQL directamente (R√°pido)"
echo ""
read -p "Seleccione una opci√≥n (1-2): " METHOD

case $METHOD in
    1)
        show_step "Ejecutando instalaci√≥n v√≠a PHP..."
        
        if [ -f "$PHP_SCRIPT" ]; then
            php "$PHP_SCRIPT"
            INSTALL_RESULT=$?
        else
            show_error "Script PHP de instalaci√≥n no encontrado"
            exit 1
        fi
        ;;
    2)
        show_step "Ejecutando instalaci√≥n v√≠a MySQL..."
        
        # Construir comando MySQL
        MYSQL_CMD="mysql -h $DB_HOST -u $DB_USERNAME"
        if [ ! -z "$DB_PASSWORD" ]; then
            MYSQL_CMD="$MYSQL_CMD -p$DB_PASSWORD"
        fi
        
        # Crear base de datos
        show_step "Creando base de datos '$DB_DATABASE'..."
        echo "CREATE DATABASE IF NOT EXISTS \`$DB_DATABASE\` CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;" | $MYSQL_CMD
        
        if [ $? -ne 0 ]; then
            show_error "Error al crear la base de datos"
            exit 1
        fi
        
        # Ejecutar schema
        show_step "Instalando estructura de la base de datos..."
        $MYSQL_CMD "$DB_DATABASE" < "$SCHEMA_FILE"
        
        if [ $? -ne 0 ]; then
            show_error "Error al instalar el esquema de la base de datos"
            exit 1
        fi
        
        # Insertar datos iniciales
        show_step "Insertando datos iniciales..."
        
        # Crear archivo temporal con datos iniciales
        TEMP_DATA=$(mktemp)
        cat > "$TEMP_DATA" << 'EOF'
-- Insertar roles por defecto
INSERT IGNORE INTO roles (id, name, description, created_at) VALUES
(1, 'Super Admin', 'Administrador con acceso completo al sistema', NOW()),
(2, 'Usuario', 'Usuario est√°ndar con permisos limitados', NOW()),
(3, 'Solo Lectura', 'Usuario con permisos √∫nicamente de consulta', NOW());

-- Insertar usuario administrador por defecto (password: admin123)
INSERT IGNORE INTO users (id, username, email, password, role_id, active, created_at) VALUES
(1, 'admin', 'admin@planilla-innova.com', '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', 1, 1, NOW());

-- Insertar configuraci√≥n b√°sica de la empresa
INSERT IGNORE INTO companies (id, name, address, phone, email, tax_id, created_at) VALUES
(1, 'Sistema de Planillas MVC', 'Direcci√≥n de la empresa', '000-0000', 'contacto@empresa.com', '0000000000', NOW());

-- Insertar tipos de conceptos b√°sicos
INSERT IGNORE INTO concept_types (id, name, description, created_at) VALUES
(1, 'Salario', 'Salario base del empleado', NOW()),
(2, 'Horas Extra', 'Pago por horas adicionales trabajadas', NOW()),
(3, 'Bono', 'Bonificaciones y incentivos', NOW()),
(4, 'Deducci√≥n', 'Descuentos aplicados al salario', NOW());

-- Insertar conceptos b√°sicos
INSERT IGNORE INTO concepts (id, code, name, concept_type_id, is_active, created_at) VALUES
(1, 'SAL_BASE', 'Salario Base', 1, 1, NOW()),
(2, 'HRS_EXTRA', 'Horas Extras', 2, 1, NOW()),
(3, 'BONO_PROD', 'Bono de Productividad', 3, 1, NOW()),
(4, 'DED_SS', 'Deducci√≥n Seguro Social', 4, 1, NOW()),
(5, 'DED_IR', 'Deducci√≥n Impuesto sobre la Renta', 4, 1, NOW());

-- Insertar situaciones laborales
INSERT IGNORE INTO employment_situations (id, name, description, is_active, created_at) VALUES
(1, 'Activo', 'Empleado activo en la empresa', 1, NOW()),
(2, 'Suspendido', 'Empleado temporalmente suspendido', 1, NOW()),
(3, 'Vacaciones', 'Empleado en per√≠odo de vacaciones', 1, NOW()),
(4, 'Incapacidad', 'Empleado con incapacidad m√©dica', 1, NOW()),
(5, 'Retirado', 'Ex-empleado retirado de la empresa', 1, NOW());

-- Insertar frecuencias de pago
INSERT IGNORE INTO payment_frequencies (id, name, description, days, created_at) VALUES
(1, 'Quincenal', 'Pago cada 15 d√≠as', 15, NOW()),
(2, 'Mensual', 'Pago mensual', 30, NOW()),
(3, 'Semanal', 'Pago semanal', 7, NOW());
EOF
        
        $MYSQL_CMD "$DB_DATABASE" < "$TEMP_DATA"
        rm "$TEMP_DATA"
        
        INSTALL_RESULT=$?
        ;;
    *)
        show_error "Opci√≥n inv√°lida"
        exit 1
        ;;
esac

# 7. Verificar resultado
if [ $INSTALL_RESULT -eq 0 ]; then
    echo ""
    show_success "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    show_success "‚ïë              ‚úÖ INSTALACI√ìN COMPLETADA                        ‚ïë"
    show_success "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo ""
    
    show_success "üéâ ¬°La base de datos se instal√≥ exitosamente!"
    echo ""
    show_warning "üìã INFORMACI√ìN DE ACCESO:"
    show_info "‚Ä¢ Usuario por defecto: admin"
    show_info "‚Ä¢ Contrase√±a por defecto: admin123"
    show_info "‚Ä¢ Base de datos: $DB_DATABASE"
    echo ""
    show_success "üÜï NOVEDADES VERSI√ìN 2.1:"
    show_info "‚Ä¢ Filtrado por tipo de planilla mejorado"
    show_info "‚Ä¢ Validaci√≥n de empleados antes de procesamiento"
    show_info "‚Ä¢ Gesti√≥n de acreedores con validaciones de seguridad"
    show_info "‚Ä¢ Correcci√≥n de errores de JavaScript en formularios"
    echo ""
    show_error "‚ö†Ô∏è  IMPORTANTE:"
    show_warning "‚Ä¢ Cambie la contrase√±a por defecto inmediatamente"
    show_warning "‚Ä¢ Configure los datos de la empresa en el panel"
    show_warning "‚Ä¢ Revise los permisos de usuarios seg√∫n sus necesidades"
    show_warning "‚Ä¢ Verifique la configuraci√≥n de moneda en configuraci√≥n empresa"
    echo ""
    show_success "üöÄ Sistema listo para usar!"
    
else
    show_error "La instalaci√≥n fall√≥ con c√≥digo de error: $INSTALL_RESULT"
    echo ""
    show_warning "üîß PASOS PARA RESOLUCI√ìN:"
    show_info "1. Verifique que el archivo .env tiene la configuraci√≥n correcta"
    show_info "2. Aseg√∫rese de que MySQL/MariaDB est√° ejecut√°ndose"
    show_info "3. Verifique las credenciales de la base de datos"
    show_info "4. Confirme que el usuario de BD tiene permisos para crear databases"
    show_info "5. Ejecute el script nuevamente"
    exit 1
fi